definitions:
  models.PostRegister:
    properties:
      name:
        type: string
    type: object
  models.UserLogin:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.UserRegister:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  rest.passwordReqChange:
    properties:
      password:
        type: string
    type: object
  rest.usernameReqChange:
    properties:
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для загрузки и просмотра картинок с регистрацией
  title: Imgur 2.0 API
  version: "1.0"
paths:
  /pictures/{imageURL}:
    delete:
      consumes:
      - application/json
      description: Delete an image for its url
      parameters:
      - description: Image url
        in: path
        name: imageURL
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete an image
      tags:
      - Image
    get:
      consumes:
      - application/json
      description: This endpoint allows a user to download an image file.
      parameters:
      - description: StorageKey of the image
        in: path
        name: imageURL
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Download an image
      tags:
      - Image
  /pictures/create:
    post:
      consumes:
      - multipart/form-data
      description: This endpoint allows a user to upload an image file.
      parameters:
      - description: Image file
        in: formData
        name: file
        required: true
        type: file
      - description: Image description
        in: formData
        name: desription
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Upload an image
      tags:
      - Image
  /pictures/my:
    get:
      consumes:
      - application/json
      description: This endpoint allows a user to download his images.
      produces:
      - application/json
      responses: {}
      summary: Download an image(s)
      tags:
      - Image
  /posts:
    post:
      consumes:
      - application/json
      description: Creates a new post for the user.
      parameters:
      - description: Post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.PostRegister'
      produces:
      - application/json
      responses: {}
      summary: Create a new post
      tags:
      - Posts
  /posts/{postID}:
    delete:
      consumes:
      - application/json
      description: Removes a specific post and all its images from the system.
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Delete a post
      tags:
      - Posts
    get:
      consumes:
      - application/json
      description: Retrieves images and details from a specific post.
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get post details
      tags:
      - Posts
  /posts/{postID}/{imageSK}:
    delete:
      consumes:
      - application/json
      description: Removes a specific image from the specified post.
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      - description: Image Storage Key
        in: path
        name: imageSK
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete an image from a post
      tags:
      - Posts
    post:
      consumes:
      - application/json
      description: Adds an image to the specified post.
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      - description: Image Storage Key
        in: path
        name: imageSK
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Add an image to a post
      tags:
      - Posts
  /posts/my:
    get:
      consumes:
      - application/json
      description: Retrieves all posts of the currently authenticated user.
      produces:
      - application/json
      responses: {}
      summary: Get all posts of the user
      tags:
      - Posts
  /users/login:
    post:
      consumes:
      - application/json
      description: This endpoint allows a user to log in by providing their username
        and password. If the credentials are correct, a JWT token will be generated
        and returned in a cookie for session management.
      parameters:
      - description: User login credentials (username and password)
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses: {}
      summary: Login an existing user
      tags:
      - User
  /users/logout:
    post:
      consumes:
      - application/json
      description: This endpoint allows a user to log out by deleting the authentication
        cookie from the client's browser.
      produces:
      - application/json
      responses: {}
      summary: Log out a user (delete authentication cookie)
      tags:
      - User
  /users/profile:
    delete:
      consumes:
      - application/json
      description: This endpoint allows an authenticated user to delete their profile
        permanently.
      produces:
      - application/json
      responses: {}
      summary: Delete user profile
      tags:
      - User
  /users/profile/password:
    patch:
      consumes:
      - application/json
      description: Allows an authenticated user to change their password
      parameters:
      - description: New password request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/rest.passwordReqChange'
      produces:
      - application/json
      responses: {}
      summary: Change user password
      tags:
      - User
  /users/profile/username:
    patch:
      consumes:
      - application/json
      description: This endpoint allows the user to change their username. The new
        username is passed in the body of the request.
      parameters:
      - description: New Username
        in: body
        name: username
        required: true
        schema:
          $ref: '#/definitions/rest.usernameReqChange'
      produces:
      - application/json
      responses: {}
      summary: Change the username of the authenticated user
      tags:
      - User
  /users/register:
    post:
      consumes:
      - application/json
      description: This endpoint registers a new user, stores the user in the database,
        and generates a JWT token for the user.
      parameters:
      - description: User data for registration
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses: {}
      summary: Register a new user
      tags:
      - User
swagger: "2.0"
